#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –≤ Yandex Cloud
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Container Registry –∏ Serverless Containers

set -e

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –≤ Yandex Cloud..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è yc CLI
if ! command -v yc &> /dev/null; then
    echo "‚ùå –û—à–∏–±–∫–∞: yc CLI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Yandex Cloud CLI: https://cloud.yandex.ru/docs/cli/quickstart"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
if ! yc config list | grep -q "token:"; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Yandex Cloud"
    echo "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: yc init"
    exit 1
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
FOLDER_ID=$(yc config get folder-id)
if [ -z "$FOLDER_ID" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: Folder ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    exit 1
fi

echo "üìã Folder ID: $FOLDER_ID"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_NAME="transport-registry"
REGISTRY_NAME="transport-registry"
IMAGE_NAME="transport-app"
CONTAINER_NAME="transport-container"
SERVICE_ACCOUNT_NAME="transport-service-account"

# –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
read -p "–í–≤–µ–¥–∏—Ç–µ URL –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö PostgreSQL: " DATABASE_URL
read -s -p "–í–≤–µ–¥–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç –¥–ª—è —Å–µ—Å—Å–∏–π: " SESSION_SECRET
echo

# –°–æ–∑–¥–∞–Ω–∏–µ Container Registry
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ Container Registry..."
if ! yc container registry get --name $REGISTRY_NAME &> /dev/null; then
    yc container registry create --name $REGISTRY_NAME
    echo "‚úÖ Container Registry —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ Container Registry —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Ä–µ–µ—Å—Ç—Ä–∞
REGISTRY_ID=$(yc container registry get --name $REGISTRY_NAME --format json | jq -r '.id')
echo "üì¶ Registry ID: $REGISTRY_ID"

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞..."
if ! yc iam service-account get --name $SERVICE_ACCOUNT_NAME &> /dev/null; then
    yc iam service-account create --name $SERVICE_ACCOUNT_NAME --description "Service account for transport registry"
    echo "‚úÖ –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω"
else
    echo "‚úÖ –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞
SERVICE_ACCOUNT_ID=$(yc iam service-account get --name $SERVICE_ACCOUNT_NAME --format json | jq -r '.id')

# –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π
echo "üîë –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–æ–ª–µ–π..."
yc resource-manager folder add-access-binding $FOLDER_ID \
    --role serverless.containers.invoker \
    --service-account-id $SERVICE_ACCOUNT_ID

yc resource-manager folder add-access-binding $FOLDER_ID \
    --role container-registry.images.puller \
    --service-account-id $SERVICE_ACCOUNT_ID

# –°–±–æ—Ä–∫–∞ –∏ –∑–∞–≥—Ä—É–∑–∫–∞ Docker –æ–±—Ä–∞–∑–∞
echo "üèóÔ∏è  –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
docker build -t cr.yandex/$REGISTRY_ID/$IMAGE_NAME:latest .

echo "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–∑–∞ –≤ Container Registry..."
docker push cr.yandex/$REGISTRY_ID/$IMAGE_NAME:latest

# –°–æ–∑–¥–∞–Ω–∏–µ Serverless Container
echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ Serverless Container..."
if yc serverless container get --name $CONTAINER_NAME &> /dev/null; then
    echo "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    yc serverless container revision deploy \
        --container-name $CONTAINER_NAME \
        --image cr.yandex/$REGISTRY_ID/$IMAGE_NAME:latest \
        --cores 1 \
        --memory 1GB \
        --concurrency 10 \
        --execution-timeout 60s \
        --service-account-id $SERVICE_ACCOUNT_ID \
        --environment DATABASE_URL="$DATABASE_URL" \
        --environment SESSION_SECRET="$SESSION_SECRET" \
        --environment NODE_ENV=production \
        --environment PORT=8080
else
    echo "‚ú® –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    yc serverless container create --name $CONTAINER_NAME
    
    yc serverless container revision deploy \
        --container-name $CONTAINER_NAME \
        --image cr.yandex/$REGISTRY_ID/$IMAGE_NAME:latest \
        --cores 1 \
        --memory 1GB \
        --concurrency 10 \
        --execution-timeout 60s \
        --service-account-id $SERVICE_ACCOUNT_ID \
        --environment DATABASE_URL="$DATABASE_URL" \
        --environment SESSION_SECRET="$SESSION_SECRET" \
        --environment NODE_ENV=production \
        --environment PORT=8080
fi

# –ü–æ–ª—É—á–µ–Ω–∏–µ URL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
CONTAINER_URL=$(yc serverless container get --name $CONTAINER_NAME --format json | jq -r '.url')

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $CONTAINER_URL"
echo ""
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–µ—Å—É—Ä—Å–∞—Ö:"
echo "- Container Registry: $REGISTRY_ID"
echo "- Serverless Container: $CONTAINER_NAME"
echo "- Service Account: $SERVICE_ACCOUNT_ID"
echo ""
echo "üîß –î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "- yc serverless container list"
echo "- yc container registry list"
echo "- yc iam service-account list"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."
sleep 10
if curl -f "$CONTAINER_URL/api/auth/user" &> /dev/null; then
    echo "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ö†Ô∏è  –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: yc serverless container revision logs --container-name $CONTAINER_NAME"
fi